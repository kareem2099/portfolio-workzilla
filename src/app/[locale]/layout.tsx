import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import React from "react";
import "@/app/globals.css";
import Header from "@/components/Header";
import ThemeProvider from "@/components/ThemeProvider";
import AIChatController from "@/components/ai/AIChatController"; // Import AIChatController
import { NextIntlClientProvider } from 'next-intl';
import getMessages from '../../../i18n';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

import { getValidLocale } from '@/lib/localeUtils';

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactElement;
  params: Promise<{ locale: string }>;
}>) {
  const resolvedParams = await params;
  const locale = await getValidLocale(resolvedParams.locale);
  const { messages } = await getMessages({ locale });
  
  // Set cookie for locale
  if (typeof window !== 'undefined') {
    document.cookie = `NEXT_LOCALE=${locale};path=/`;
  }
  return (
    <html lang={locale} dir={locale === 'ar' ? 'rtl' : 'ltr'}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <NextIntlClientProvider locale={locale} messages={messages}>
          <ThemeProvider>
            <Header locale={locale} />
            {children}
            <AIChatController /> {/* Add AIChatController here */}
          </ThemeProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
